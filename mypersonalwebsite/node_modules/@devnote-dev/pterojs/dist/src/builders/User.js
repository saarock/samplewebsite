"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserBuilder = void 0;
const base_1 = require("./base");
const Errors_1 = require("../structures/Errors");
class UserBuilder extends base_1.Builder {
    constructor() {
        super();
        this.externalId = undefined;
        this.username = '';
        this.email = '';
        this.firstname = '';
        this.lastname = '';
        this.password = undefined;
        this.isAdmin = false;
    }
    static fromUser(user) {
        let b = new this();
        if (user.externalId)
            b.setExternalId(user.externalId);
        if (user.username)
            b.setUsername(user.username);
        if (user.email)
            b.setEmail(user.email);
        if (user.firstname)
            b.setFirstname(user.firstname);
        if (user.lastname)
            b.setLastname(user.lastname);
        if (user.isAdmin)
            b.setAdmin(user.isAdmin);
        return b;
    }
    setExternalId(id) {
        this.externalId = id;
        return this;
    }
    setUsername(username) {
        this.username = username;
        return this;
    }
    setEmail(email) {
        this.email = email;
        return this;
    }
    setFirstname(name) {
        this.firstname = name;
        return this;
    }
    setLastname(name) {
        this.lastname = name;
        return this;
    }
    setPassword(password) {
        this.password = password;
        return this;
    }
    setAdmin(state) {
        this.isAdmin = state;
        return this;
    }
    build() {
        if (!this.username)
            throw new Errors_1.ValidationError('a username is required');
        if (!this.email)
            throw new Errors_1.ValidationError('an email is required');
        if (!this.firstname)
            throw new Errors_1.ValidationError('a first name is required');
        if (!this.lastname)
            throw new Errors_1.ValidationError('a last name is required');
        return super.build();
    }
}
exports.UserBuilder = UserBuilder;
