import { FileConfig, OptionSpec } from '../common';
declare function parseAs(from: Record<string, any>, to: Record<string, any>): Record<string, any>;
declare function appConfig(options?: FileConfig): Record<string, OptionSpec>;
declare function clientConfig(options?: FileConfig): Record<string, OptionSpec | any>;
declare const _default: {
    DEFAULT: {
        APPLICATION: {
            users: {
                fetch: boolean;
                cache: boolean;
                max: number;
            };
            nodes: {
                fetch: boolean;
                cache: boolean;
                max: number;
            };
            nests: {
                fetch: boolean;
                cache: boolean;
                max: number;
            };
            servers: {
                fetch: boolean;
                cache: boolean;
                max: number;
            };
            locations: {
                fetch: boolean;
                cache: boolean;
                max: number;
            };
        };
        CLIENT: {
            ws: boolean;
            fetchClient: boolean;
            servers: {
                fetch: boolean;
                cache: boolean;
                max: number;
            };
            subUsers: {
                fetch: boolean;
                cache: boolean;
                max: number;
            };
            disableEvents: never[];
        };
    };
    parseAs: typeof parseAs;
    appConfig: typeof appConfig;
    clientConfig: typeof clientConfig;
};
export default _default;
