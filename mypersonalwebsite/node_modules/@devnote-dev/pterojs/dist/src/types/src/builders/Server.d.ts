import type { User } from '../structures/User';
import { Builder } from './base';
import { CreateServerOptions, Egg } from '../common/app';
import { FeatureLimits, Limits } from '../common';
export declare class ServerBuilder extends Builder {
    private externalId;
    private name;
    private description;
    private user;
    private egg;
    private dockerImage;
    private startup;
    private environment;
    private skipScripts?;
    private oomDisabled?;
    private limits;
    private featureLimits;
    private allocation?;
    private deploy?;
    private startOnCompletion?;
    constructor();
    setExternalId(id: string | undefined): this;
    setName(name: string): this;
    setDescription(description: string): this;
    setUser(user: number | User): this;
    setEgg(egg: number | Egg): this;
    setDockerImage(image: string): this;
    setStartup(command: string): this;
    setVariable(key: string, value: string | number | boolean): this;
    setEnvironment(variables: Record<string, string | number | boolean>): this;
    setSkipScripts(value: boolean): this;
    setOOMDisabled(value: boolean): this;
    setLimits(limits: Partial<Limits>): this;
    setFeatureLimits(featureLimits: Partial<FeatureLimits>): this;
    setAllocation(options: {
        default?: number;
        additional?: number[];
    }): this;
    setDeployment(options: {
        locations?: number[];
        dedicatedIp?: boolean;
        portRange?: string[];
    }): this;
    setStartOnCompletion(value: boolean): this;
    build(): CreateServerOptions;
}
