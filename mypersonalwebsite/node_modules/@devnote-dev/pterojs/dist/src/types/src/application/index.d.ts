import { ApplicationServerManager } from './ApplicationServerManager';
import { NestManager } from './NestManager';
import { NodeAllocationManager } from './NodeAllocationManager';
import { NodeLocationManager } from './NodeLocationManager';
import { NodeManager } from './NodeManager';
import { RequestManager } from '../http/RequestManager';
import { UserManager } from './UserManager';
import { OptionSpec } from '../common';
/**
 * The base class for the Pterodactyl application API.
 * This operates using a Pterodactyl API key which can be found at <your.domain.name/admin/api>
 * or <your.domain.name/account/api> if you are using a client API key.
 *
 * **Warning:** Keep your API key private at all times. Exposing this can lead
 * to your servers, nodes, configurations and more being corrupted and/or deleted.
 */
export declare class PteroApp {
    /**
     * The domain for your Pterodactyl panel. This should be the main URL only
     * (not "/api"). Any additional paths will count as the API path.
     */
    domain: string;
    /**
     * The API key for your Pterodactyl panel. This should be kept private at
     * all times. Full access must be granted in the panel for the whole library
     * to be accessible.
     */
    auth: string;
    options: Record<string, OptionSpec>;
    allocations: NodeAllocationManager;
    locations: NodeLocationManager;
    nests: NestManager;
    nodes: NodeManager;
    servers: ApplicationServerManager;
    users: UserManager;
    requests: RequestManager;
    constructor(domain: string, auth: string, options?: Record<string, OptionSpec>);
    get ping(): number;
}
