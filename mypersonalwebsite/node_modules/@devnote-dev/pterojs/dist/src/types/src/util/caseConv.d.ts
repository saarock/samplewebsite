export interface ConvertOptions {
    ignore?: string[];
    map?: Record<string, string>;
    cast?: Record<string, any>;
}
declare function toCamelCase<T>(obj: any, options?: ConvertOptions): T;
declare function toSnakeCase<T>(obj: any, options?: ConvertOptions): T;
declare const _default: {
    toCamelCase: typeof toCamelCase;
    toSnakeCase: typeof toSnakeCase;
};
export default _default;
